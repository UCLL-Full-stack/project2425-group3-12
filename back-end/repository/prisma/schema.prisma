generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  firstName String
  lastName  String
  email     String     @unique
  password  String
  role      String
  member    Member? // Optional relation since a user can be either member or organiser
  organiser Organiser? // Optional relation since a user can be either member or organiser
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// Member model
model Member {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique // Ensures one-to-one relationship with User
  user      User     @relation(fields: [userId], references: [id])
  clubs     Club[] // Direct many-to-many
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Event     Event?   @relation(fields: [eventId], references: [id])
  eventId   Int?
}

// Organiser model
model Organiser {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique // Ensures one-to-one relationship with User
  user      User     @relation(fields: [userId], references: [id])
  clubs     Club[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Club model
model Club {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  type        String
  organiser   Organiser @relation(fields: [organiserId], references: [id])
  organiserId Int
  events      Event[]
  members     Member[] // Direct many-to-many
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Event model
model Event {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  location     String
  date         DateTime
  time         String
  club         Club     @relation(fields: [clubId], references: [id])
  clubId       Int
  participants Member[] // Participants can be members of multiple clubs
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
